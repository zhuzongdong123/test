// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Project.pb

#ifndef PROTOBUF_INCLUDED_Project_2epb
#define PROTOBUF_INCLUDED_Project_2epb

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h> // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Project_2epb

// Internal implementation detail -- do not use these members.
struct TableStruct_Project_2epb
{
    static const ::google::protobuf::internal::ParseTableField entries[] PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::google::protobuf::internal::AuxillaryParseTableField aux[] PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::google::protobuf::internal::ParseTable schema[10] PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::google::protobuf::internal::FieldMetadata field_metadata[];
    static const ::google::protobuf::internal::SerializationTable serialization_table[];
    static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Project_2epb();
namespace pb
{
class Data1d;
class Data1dDefaultTypeInternal;
extern Data1dDefaultTypeInternal _Data1d_default_instance_;
class Data3d;
class Data3dDefaultTypeInternal;
extern Data3dDefaultTypeInternal _Data3d_default_instance_;
class DataPreprocessInfo;
class DataPreprocessInfoDefaultTypeInternal;
extern DataPreprocessInfoDefaultTypeInternal _DataPreprocessInfo_default_instance_;
class ForwardModelingParaSetting;
class ForwardModelingParaSettingDefaultTypeInternal;
extern ForwardModelingParaSettingDefaultTypeInternal _ForwardModelingParaSetting_default_instance_;
class ModelingParam;
class ModelingParamDefaultTypeInternal;
extern ModelingParamDefaultTypeInternal _ModelingParam_default_instance_;
class ObservationSystemSetting;
class ObservationSystemSettingDefaultTypeInternal;
extern ObservationSystemSettingDefaultTypeInternal _ObservationSystemSetting_default_instance_;
class ProjectBaseInfo;
class ProjectBaseInfoDefaultTypeInternal;
extern ProjectBaseInfoDefaultTypeInternal _ProjectBaseInfo_default_instance_;
class ProjectInfo;
class ProjectInfoDefaultTypeInternal;
extern ProjectInfoDefaultTypeInternal _ProjectInfo_default_instance_;
class Vec2d;
class Vec2dDefaultTypeInternal;
extern Vec2dDefaultTypeInternal _Vec2d_default_instance_;
class Vec3d;
class Vec3dDefaultTypeInternal;
extern Vec3dDefaultTypeInternal _Vec3d_default_instance_;
} // namespace pb
namespace google
{
namespace protobuf
{
template <>
::pb::Data1d *Arena::CreateMaybeMessage<::pb::Data1d>(Arena *);
template <>
::pb::Data3d *Arena::CreateMaybeMessage<::pb::Data3d>(Arena *);
template <>
::pb::DataPreprocessInfo *Arena::CreateMaybeMessage<::pb::DataPreprocessInfo>(Arena *);
template <>
::pb::ForwardModelingParaSetting *Arena::CreateMaybeMessage<::pb::ForwardModelingParaSetting>(Arena *);
template <>
::pb::ModelingParam *Arena::CreateMaybeMessage<::pb::ModelingParam>(Arena *);
template <>
::pb::ObservationSystemSetting *Arena::CreateMaybeMessage<::pb::ObservationSystemSetting>(Arena *);
template <>
::pb::ProjectBaseInfo *Arena::CreateMaybeMessage<::pb::ProjectBaseInfo>(Arena *);
template <>
::pb::ProjectInfo *Arena::CreateMaybeMessage<::pb::ProjectInfo>(Arena *);
template <>
::pb::Vec2d *Arena::CreateMaybeMessage<::pb::Vec2d>(Arena *);
template <>
::pb::Vec3d *Arena::CreateMaybeMessage<::pb::Vec3d>(Arena *);
} // namespace protobuf
} // namespace google
namespace pb
{

enum DeviceType
{
    NType1                                  = 0,
    NType2                                  = 1,
    NType3                                  = 2,
    NType4                                  = 3,
    NType5                                  = 4,
    NType6                                  = 5,
    NType7                                  = 6,
    NType8                                  = 7,
    NType9                                  = 8,
    NType10                                 = 9,
    ESCAN                                   = 10,
    FocusingSounding                        = 11,
    DeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
    DeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool DeviceType_IsValid(int value);
const DeviceType DeviceType_MIN = NType1;
const DeviceType DeviceType_MAX = FocusingSounding;
const int DeviceType_ARRAYSIZE  = DeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor *DeviceType_descriptor();
inline const ::std::string &DeviceType_Name(DeviceType value)
{
    return ::google::protobuf::internal::NameOfEnum(
        DeviceType_descriptor(), value);
}
inline bool DeviceType_Parse(
    const ::std::string &name, DeviceType *value)
{
    return ::google::protobuf::internal::ParseNamedEnum<DeviceType>(
        DeviceType_descriptor(), name, value);
}
enum PotentialDeviceSelectionSwitch
{
    Schlumberger                                                = 0,
    AMNB                                                        = 1,
    PotentialDeviceSelectionSwitch_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
    PotentialDeviceSelectionSwitch_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool PotentialDeviceSelectionSwitch_IsValid(int value);
const PotentialDeviceSelectionSwitch PotentialDeviceSelectionSwitch_MIN = Schlumberger;
const PotentialDeviceSelectionSwitch PotentialDeviceSelectionSwitch_MAX = AMNB;
const int PotentialDeviceSelectionSwitch_ARRAYSIZE                      = PotentialDeviceSelectionSwitch_MAX + 1;

const ::google::protobuf::EnumDescriptor *PotentialDeviceSelectionSwitch_descriptor();
inline const ::std::string &PotentialDeviceSelectionSwitch_Name(PotentialDeviceSelectionSwitch value)
{
    return ::google::protobuf::internal::NameOfEnum(
        PotentialDeviceSelectionSwitch_descriptor(), value);
}
inline bool PotentialDeviceSelectionSwitch_Parse(
    const ::std::string &name, PotentialDeviceSelectionSwitch *value)
{
    return ::google::protobuf::internal::ParseNamedEnum<PotentialDeviceSelectionSwitch>(
        PotentialDeviceSelectionSwitch_descriptor(), name, value);
}
enum ExcavationDir
{
    GreaterMileage                             = 0,
    LessMileage                                = 1,
    ExcavationDir_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
    ExcavationDir_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool ExcavationDir_IsValid(int value);
const ExcavationDir ExcavationDir_MIN = GreaterMileage;
const ExcavationDir ExcavationDir_MAX = LessMileage;
const int ExcavationDir_ARRAYSIZE     = ExcavationDir_MAX + 1;

const ::google::protobuf::EnumDescriptor *ExcavationDir_descriptor();
inline const ::std::string &ExcavationDir_Name(ExcavationDir value)
{
    return ::google::protobuf::internal::NameOfEnum(
        ExcavationDir_descriptor(), value);
}
inline bool ExcavationDir_Parse(
    const ::std::string &name, ExcavationDir *value)
{
    return ::google::protobuf::internal::ParseNamedEnum<ExcavationDir>(
        ExcavationDir_descriptor(), name, value);
}
// ===================================================================

class Vec3d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Vec3d) */
{
  public:
    Vec3d();
    virtual ~Vec3d();

    Vec3d(const Vec3d &from);

    inline Vec3d &operator=(const Vec3d &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    Vec3d(Vec3d &&from) noexcept
        : Vec3d()
    {
        *this = ::std::move(from);
    }

    inline Vec3d &operator=(Vec3d &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const Vec3d &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const Vec3d *internal_default_instance()
    {
        return reinterpret_cast<const Vec3d *>(
            &_Vec3d_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        0;

    void Swap(Vec3d *other);
    friend void swap(Vec3d &a, Vec3d &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline Vec3d *New() const final
    {
        return CreateMaybeMessage<Vec3d>(nullptr);
    }

    Vec3d *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<Vec3d>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const Vec3d &from);
    void MergeFrom(const Vec3d &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(Vec3d *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // double x = 1;
    void clear_x();
    static const int kXFieldNumber = 1;
    double x() const;
    void set_x(double value);

    // double y = 2;
    void clear_y();
    static const int kYFieldNumber = 2;
    double y() const;
    void set_y(double value);

    // double z = 3;
    void clear_z();
    static const int kZFieldNumber = 3;
    double z() const;
    void set_z(double value);

    // @@protoc_insertion_point(class_scope:pb.Vec3d)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    double x_;
    double y_;
    double z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// -------------------------------------------------------------------

class Vec2d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Vec2d) */
{
  public:
    Vec2d();
    virtual ~Vec2d();

    Vec2d(const Vec2d &from);

    inline Vec2d &operator=(const Vec2d &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    Vec2d(Vec2d &&from) noexcept
        : Vec2d()
    {
        *this = ::std::move(from);
    }

    inline Vec2d &operator=(Vec2d &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const Vec2d &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const Vec2d *internal_default_instance()
    {
        return reinterpret_cast<const Vec2d *>(
            &_Vec2d_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        1;

    void Swap(Vec2d *other);
    friend void swap(Vec2d &a, Vec2d &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline Vec2d *New() const final
    {
        return CreateMaybeMessage<Vec2d>(nullptr);
    }

    Vec2d *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<Vec2d>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const Vec2d &from);
    void MergeFrom(const Vec2d &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(Vec2d *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // double x = 1;
    void clear_x();
    static const int kXFieldNumber = 1;
    double x() const;
    void set_x(double value);

    // double y = 2;
    void clear_y();
    static const int kYFieldNumber = 2;
    double y() const;
    void set_y(double value);

    // @@protoc_insertion_point(class_scope:pb.Vec2d)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    double x_;
    double y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// -------------------------------------------------------------------

class Data1d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Data1d) */
{
  public:
    Data1d();
    virtual ~Data1d();

    Data1d(const Data1d &from);

    inline Data1d &operator=(const Data1d &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    Data1d(Data1d &&from) noexcept
        : Data1d()
    {
        *this = ::std::move(from);
    }

    inline Data1d &operator=(Data1d &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const Data1d &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const Data1d *internal_default_instance()
    {
        return reinterpret_cast<const Data1d *>(
            &_Data1d_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        2;

    void Swap(Data1d *other);
    friend void swap(Data1d &a, Data1d &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline Data1d *New() const final
    {
        return CreateMaybeMessage<Data1d>(nullptr);
    }

    Data1d *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<Data1d>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const Data1d &from);
    void MergeFrom(const Data1d &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(Data1d *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // repeated double data = 1;
    int data_size() const;
    void clear_data();
    static const int kDataFieldNumber = 1;
    double data(int index) const;
    void set_data(int index, double value);
    void add_data(double value);
    const ::google::protobuf::RepeatedField<double> &
    data() const;
    ::google::protobuf::RepeatedField<double> *
    mutable_data();

    // uint32 rows = 2;
    void clear_rows();
    static const int kRowsFieldNumber = 2;
    ::google::protobuf::uint32 rows() const;
    void set_rows(::google::protobuf::uint32 value);

    // @@protoc_insertion_point(class_scope:pb.Data1d)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    ::google::protobuf::RepeatedField<double> data_;
    mutable std::atomic<int> _data_cached_byte_size_;
    ::google::protobuf::uint32 rows_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// -------------------------------------------------------------------

class Data3d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Data3d) */
{
  public:
    Data3d();
    virtual ~Data3d();

    Data3d(const Data3d &from);

    inline Data3d &operator=(const Data3d &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    Data3d(Data3d &&from) noexcept
        : Data3d()
    {
        *this = ::std::move(from);
    }

    inline Data3d &operator=(Data3d &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const Data3d &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const Data3d *internal_default_instance()
    {
        return reinterpret_cast<const Data3d *>(
            &_Data3d_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        3;

    void Swap(Data3d *other);
    friend void swap(Data3d &a, Data3d &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline Data3d *New() const final
    {
        return CreateMaybeMessage<Data3d>(nullptr);
    }

    Data3d *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<Data3d>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const Data3d &from);
    void MergeFrom(const Data3d &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(Data3d *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // repeated double data = 1;
    int data_size() const;
    void clear_data();
    static const int kDataFieldNumber = 1;
    double data(int index) const;
    void set_data(int index, double value);
    void add_data(double value);
    const ::google::protobuf::RepeatedField<double> &
    data() const;
    ::google::protobuf::RepeatedField<double> *
    mutable_data();

    // uint32 x = 2;
    void clear_x();
    static const int kXFieldNumber = 2;
    ::google::protobuf::uint32 x() const;
    void set_x(::google::protobuf::uint32 value);

    // uint32 y = 3;
    void clear_y();
    static const int kYFieldNumber = 3;
    ::google::protobuf::uint32 y() const;
    void set_y(::google::protobuf::uint32 value);

    // uint32 z = 4;
    void clear_z();
    static const int kZFieldNumber = 4;
    ::google::protobuf::uint32 z() const;
    void set_z(::google::protobuf::uint32 value);

    // @@protoc_insertion_point(class_scope:pb.Data3d)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    ::google::protobuf::RepeatedField<double> data_;
    mutable std::atomic<int> _data_cached_byte_size_;
    ::google::protobuf::uint32 x_;
    ::google::protobuf::uint32 y_;
    ::google::protobuf::uint32 z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// -------------------------------------------------------------------

class ObservationSystemSetting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ObservationSystemSetting) */
{
  public:
    ObservationSystemSetting();
    virtual ~ObservationSystemSetting();

    ObservationSystemSetting(const ObservationSystemSetting &from);

    inline ObservationSystemSetting &operator=(const ObservationSystemSetting &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    ObservationSystemSetting(ObservationSystemSetting &&from) noexcept
        : ObservationSystemSetting()
    {
        *this = ::std::move(from);
    }

    inline ObservationSystemSetting &operator=(ObservationSystemSetting &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const ObservationSystemSetting &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const ObservationSystemSetting *internal_default_instance()
    {
        return reinterpret_cast<const ObservationSystemSetting *>(
            &_ObservationSystemSetting_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        4;

    void Swap(ObservationSystemSetting *other);
    friend void swap(ObservationSystemSetting &a, ObservationSystemSetting &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline ObservationSystemSetting *New() const final
    {
        return CreateMaybeMessage<ObservationSystemSetting>(nullptr);
    }

    ObservationSystemSetting *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<ObservationSystemSetting>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const ObservationSystemSetting &from);
    void MergeFrom(const ObservationSystemSetting &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(ObservationSystemSetting *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // repeated .pb.Vec3d powerSupplyPointData = 4;
    int powersupplypointdata_size() const;
    void clear_powersupplypointdata();
    static const int kPowerSupplyPointDataFieldNumber = 4;
    ::pb::Vec3d *mutable_powersupplypointdata(int index);
    ::google::protobuf::RepeatedPtrField<::pb::Vec3d> *
    mutable_powersupplypointdata();
    const ::pb::Vec3d &powersupplypointdata(int index) const;
    ::pb::Vec3d *add_powersupplypointdata();
    const ::google::protobuf::RepeatedPtrField<::pb::Vec3d> &
    powersupplypointdata() const;

    // repeated .pb.Vec3d measuringPointData = 5;
    int measuringpointdata_size() const;
    void clear_measuringpointdata();
    static const int kMeasuringPointDataFieldNumber = 5;
    ::pb::Vec3d *mutable_measuringpointdata(int index);
    ::google::protobuf::RepeatedPtrField<::pb::Vec3d> *
    mutable_measuringpointdata();
    const ::pb::Vec3d &measuringpointdata(int index) const;
    ::pb::Vec3d *add_measuringpointdata();
    const ::google::protobuf::RepeatedPtrField<::pb::Vec3d> &
    measuringpointdata() const;

    // repeated float elecCircleDisVec = 6;
    int eleccircledisvec_size() const;
    void clear_eleccircledisvec();
    static const int kElecCircleDisVecFieldNumber = 6;
    float eleccircledisvec(int index) const;
    void set_eleccircledisvec(int index, float value);
    void add_eleccircledisvec(float value);
    const ::google::protobuf::RepeatedField<float> &
    eleccircledisvec() const;
    ::google::protobuf::RepeatedField<float> *
    mutable_eleccircledisvec();

    // string mileageNumber = 8;
    void clear_mileagenumber();
    static const int kMileageNumberFieldNumber = 8;
    const ::std::string &mileagenumber() const;
    void set_mileagenumber(const ::std::string &value);
#if LANG_CXX11
    void set_mileagenumber(::std::string &&value);
#endif
    void set_mileagenumber(const char *value);
    void set_mileagenumber(const char *value, size_t size);
    ::std::string *mutable_mileagenumber();
    ::std::string *release_mileagenumber();
    void set_allocated_mileagenumber(::std::string *mileagenumber);

    // .pb.Vec3d facePosition = 3;
    bool has_faceposition() const;
    void clear_faceposition();
    static const int kFacePositionFieldNumber = 3;
    const ::pb::Vec3d &faceposition() const;
    ::pb::Vec3d *release_faceposition();
    ::pb::Vec3d *mutable_faceposition();
    void set_allocated_faceposition(::pb::Vec3d *faceposition);

    // float faceWidth = 1;
    void clear_facewidth();
    static const int kFaceWidthFieldNumber = 1;
    float facewidth() const;
    void set_facewidth(float value);

    // float faceHeight = 2;
    void clear_faceheight();
    static const int kFaceHeightFieldNumber = 2;
    float faceheight() const;
    void set_faceheight(float value);

    // .pb.DeviceType deviceType = 7;
    void clear_devicetype();
    static const int kDeviceTypeFieldNumber = 7;
    ::pb::DeviceType devicetype() const;
    void set_devicetype(::pb::DeviceType value);

    // .pb.ExcavationDir excavationDir = 9;
    void clear_excavationdir();
    static const int kExcavationDirFieldNumber = 9;
    ::pb::ExcavationDir excavationdir() const;
    void set_excavationdir(::pb::ExcavationDir value);

    // @@protoc_insertion_point(class_scope:pb.ObservationSystemSetting)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    ::google::protobuf::RepeatedPtrField<::pb::Vec3d> powersupplypointdata_;
    ::google::protobuf::RepeatedPtrField<::pb::Vec3d> measuringpointdata_;
    ::google::protobuf::RepeatedField<float> eleccircledisvec_;
    mutable std::atomic<int> _eleccircledisvec_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr mileagenumber_;
    ::pb::Vec3d *faceposition_;
    float facewidth_;
    float faceheight_;
    int devicetype_;
    int excavationdir_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// -------------------------------------------------------------------

class ForwardModelingParaSetting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ForwardModelingParaSetting) */
{
  public:
    ForwardModelingParaSetting();
    virtual ~ForwardModelingParaSetting();

    ForwardModelingParaSetting(const ForwardModelingParaSetting &from);

    inline ForwardModelingParaSetting &operator=(const ForwardModelingParaSetting &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    ForwardModelingParaSetting(ForwardModelingParaSetting &&from) noexcept
        : ForwardModelingParaSetting()
    {
        *this = ::std::move(from);
    }

    inline ForwardModelingParaSetting &operator=(ForwardModelingParaSetting &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const ForwardModelingParaSetting &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const ForwardModelingParaSetting *internal_default_instance()
    {
        return reinterpret_cast<const ForwardModelingParaSetting *>(
            &_ForwardModelingParaSetting_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        5;

    void Swap(ForwardModelingParaSetting *other);
    friend void swap(ForwardModelingParaSetting &a, ForwardModelingParaSetting &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline ForwardModelingParaSetting *New() const final
    {
        return CreateMaybeMessage<ForwardModelingParaSetting>(nullptr);
    }

    ForwardModelingParaSetting *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<ForwardModelingParaSetting>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const ForwardModelingParaSetting &from);
    void MergeFrom(const ForwardModelingParaSetting &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(ForwardModelingParaSetting *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // .pb.PotentialDeviceSelectionSwitch potentialDeviceSelectionSwitch = 1;
    void clear_potentialdeviceselectionswitch();
    static const int kPotentialDeviceSelectionSwitchFieldNumber = 1;
    ::pb::PotentialDeviceSelectionSwitch potentialdeviceselectionswitch() const;
    void set_potentialdeviceselectionswitch(::pb::PotentialDeviceSelectionSwitch value);

    // uint32 currentINumX = 2;
    void clear_currentinumx();
    static const int kCurrentINumXFieldNumber = 2;
    ::google::protobuf::uint32 currentinumx() const;
    void set_currentinumx(::google::protobuf::uint32 value);

    // uint32 currentINumY = 3;
    void clear_currentinumy();
    static const int kCurrentINumYFieldNumber = 3;
    ::google::protobuf::uint32 currentinumy() const;
    void set_currentinumy(::google::protobuf::uint32 value);

    // uint32 currentINumZ = 4;
    void clear_currentinumz();
    static const int kCurrentINumZFieldNumber = 4;
    ::google::protobuf::uint32 currentinumz() const;
    void set_currentinumz(::google::protobuf::uint32 value);

    // double II = 5;
    void clear_ii();
    static const int kIIFieldNumber = 5;
    double ii() const;
    void set_ii(double value);

    // double CII = 6;
    void clear_cii();
    static const int kCIIFieldNumber = 6;
    double cii() const;
    void set_cii(double value);

    // double sgM0Value = 7;
    void clear_sgm0value();
    static const int kSgM0ValueFieldNumber = 7;
    double sgm0value() const;
    void set_sgm0value(double value);

    // uint32 inverX1 = 8;
    void clear_inverx1();
    static const int kInverX1FieldNumber = 8;
    ::google::protobuf::uint32 inverx1() const;
    void set_inverx1(::google::protobuf::uint32 value);

    // uint32 inverX2 = 9;
    void clear_inverx2();
    static const int kInverX2FieldNumber = 9;
    ::google::protobuf::uint32 inverx2() const;
    void set_inverx2(::google::protobuf::uint32 value);

    // uint32 inverY1 = 10;
    void clear_invery1();
    static const int kInverY1FieldNumber = 10;
    ::google::protobuf::uint32 invery1() const;
    void set_invery1(::google::protobuf::uint32 value);

    // uint32 inverY2 = 11;
    void clear_invery2();
    static const int kInverY2FieldNumber = 11;
    ::google::protobuf::uint32 invery2() const;
    void set_invery2(::google::protobuf::uint32 value);

    // uint32 inverZ1 = 12;
    void clear_inverz1();
    static const int kInverZ1FieldNumber = 12;
    ::google::protobuf::uint32 inverz1() const;
    void set_inverz1(::google::protobuf::uint32 value);

    // uint32 inverZ2 = 13;
    void clear_inverz2();
    static const int kInverZ2FieldNumber = 13;
    ::google::protobuf::uint32 inverz2() const;
    void set_inverz2(::google::protobuf::uint32 value);

    // float actual_begin_x = 14;
    void clear_actual_begin_x();
    static const int kActualBeginXFieldNumber = 14;
    float actual_begin_x() const;
    void set_actual_begin_x(float value);

    // float actual_end_x = 15;
    void clear_actual_end_x();
    static const int kActualEndXFieldNumber = 15;
    float actual_end_x() const;
    void set_actual_end_x(float value);

    // float actual_begin_y = 16;
    void clear_actual_begin_y();
    static const int kActualBeginYFieldNumber = 16;
    float actual_begin_y() const;
    void set_actual_begin_y(float value);

    // float actual_end_y = 17;
    void clear_actual_end_y();
    static const int kActualEndYFieldNumber = 17;
    float actual_end_y() const;
    void set_actual_end_y(float value);

    // float actual_begin_z = 18;
    void clear_actual_begin_z();
    static const int kActualBeginZFieldNumber = 18;
    float actual_begin_z() const;
    void set_actual_begin_z(float value);

    // float actual_end_z = 19;
    void clear_actual_end_z();
    static const int kActualEndZFieldNumber = 19;
    float actual_end_z() const;
    void set_actual_end_z(float value);

    // @@protoc_insertion_point(class_scope:pb.ForwardModelingParaSetting)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    int potentialdeviceselectionswitch_;
    ::google::protobuf::uint32 currentinumx_;
    ::google::protobuf::uint32 currentinumy_;
    ::google::protobuf::uint32 currentinumz_;
    double ii_;
    double cii_;
    double sgm0value_;
    ::google::protobuf::uint32 inverx1_;
    ::google::protobuf::uint32 inverx2_;
    ::google::protobuf::uint32 invery1_;
    ::google::protobuf::uint32 invery2_;
    ::google::protobuf::uint32 inverz1_;
    ::google::protobuf::uint32 inverz2_;
    float actual_begin_x_;
    float actual_end_x_;
    float actual_begin_y_;
    float actual_end_y_;
    float actual_begin_z_;
    float actual_end_z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// -------------------------------------------------------------------

class DataPreprocessInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.DataPreprocessInfo) */
{
  public:
    DataPreprocessInfo();
    virtual ~DataPreprocessInfo();

    DataPreprocessInfo(const DataPreprocessInfo &from);

    inline DataPreprocessInfo &operator=(const DataPreprocessInfo &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    DataPreprocessInfo(DataPreprocessInfo &&from) noexcept
        : DataPreprocessInfo()
    {
        *this = ::std::move(from);
    }

    inline DataPreprocessInfo &operator=(DataPreprocessInfo &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const DataPreprocessInfo &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const DataPreprocessInfo *internal_default_instance()
    {
        return reinterpret_cast<const DataPreprocessInfo *>(
            &_DataPreprocessInfo_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        6;

    void Swap(DataPreprocessInfo *other);
    friend void swap(DataPreprocessInfo &a, DataPreprocessInfo &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline DataPreprocessInfo *New() const final
    {
        return CreateMaybeMessage<DataPreprocessInfo>(nullptr);
    }

    DataPreprocessInfo *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<DataPreprocessInfo>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const DataPreprocessInfo &from);
    void MergeFrom(const DataPreprocessInfo &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(DataPreprocessInfo *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // repeated double observeDataList = 2;
    int observedatalist_size() const;
    void clear_observedatalist();
    static const int kObserveDataListFieldNumber = 2;
    double observedatalist(int index) const;
    void set_observedatalist(int index, double value);
    void add_observedatalist(double value);
    const ::google::protobuf::RepeatedField<double> &
    observedatalist() const;
    ::google::protobuf::RepeatedField<double> *
    mutable_observedatalist();

    // repeated double adjustmentDataVec = 3;
    int adjustmentdatavec_size() const;
    void clear_adjustmentdatavec();
    static const int kAdjustmentDataVecFieldNumber = 3;
    double adjustmentdatavec(int index) const;
    void set_adjustmentdatavec(int index, double value);
    void add_adjustmentdatavec(double value);
    const ::google::protobuf::RepeatedField<double> &
    adjustmentdatavec() const;
    ::google::protobuf::RepeatedField<double> *
    mutable_adjustmentdatavec();

    // .pb.Data1d badPoints = 1;
    bool has_badpoints() const;
    void clear_badpoints();
    static const int kBadPointsFieldNumber = 1;
    const ::pb::Data1d &badpoints() const;
    ::pb::Data1d *release_badpoints();
    ::pb::Data1d *mutable_badpoints();
    void set_allocated_badpoints(::pb::Data1d *badpoints);

    // @@protoc_insertion_point(class_scope:pb.DataPreprocessInfo)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    ::google::protobuf::RepeatedField<double> observedatalist_;
    mutable std::atomic<int> _observedatalist_cached_byte_size_;
    ::google::protobuf::RepeatedField<double> adjustmentdatavec_;
    mutable std::atomic<int> _adjustmentdatavec_cached_byte_size_;
    ::pb::Data1d *badpoints_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// -------------------------------------------------------------------

class ModelingParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ModelingParam) */
{
  public:
    ModelingParam();
    virtual ~ModelingParam();

    ModelingParam(const ModelingParam &from);

    inline ModelingParam &operator=(const ModelingParam &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    ModelingParam(ModelingParam &&from) noexcept
        : ModelingParam()
    {
        *this = ::std::move(from);
    }

    inline ModelingParam &operator=(ModelingParam &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const ModelingParam &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const ModelingParam *internal_default_instance()
    {
        return reinterpret_cast<const ModelingParam *>(
            &_ModelingParam_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        7;

    void Swap(ModelingParam *other);
    friend void swap(ModelingParam &a, ModelingParam &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline ModelingParam *New() const final
    {
        return CreateMaybeMessage<ModelingParam>(nullptr);
    }

    ModelingParam *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<ModelingParam>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const ModelingParam &from);
    void MergeFrom(const ModelingParam &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(ModelingParam *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // float forecastLength = 1;
    void clear_forecastlength();
    static const int kForecastLengthFieldNumber = 1;
    float forecastlength() const;
    void set_forecastlength(float value);

    // float predictionCellSpacing = 2;
    void clear_predictioncellspacing();
    static const int kPredictionCellSpacingFieldNumber = 2;
    float predictioncellspacing() const;
    void set_predictioncellspacing(float value);

    // float tunnelCavityRangeX = 3;
    void clear_tunnelcavityrangex();
    static const int kTunnelCavityRangeXFieldNumber = 3;
    float tunnelcavityrangex() const;
    void set_tunnelcavityrangex(float value);

    // float tunnelCavityRangeY = 4;
    void clear_tunnelcavityrangey();
    static const int kTunnelCavityRangeYFieldNumber = 4;
    float tunnelcavityrangey() const;
    void set_tunnelcavityrangey(float value);

    // float inversionAreaRangeX = 5;
    void clear_inversionarearangex();
    static const int kInversionAreaRangeXFieldNumber = 5;
    float inversionarearangex() const;
    void set_inversionarearangex(float value);

    // float inversionAreaRangeY = 6;
    void clear_inversionarearangey();
    static const int kInversionAreaRangeYFieldNumber = 6;
    float inversionarearangey() const;
    void set_inversionarearangey(float value);

    // @@protoc_insertion_point(class_scope:pb.ModelingParam)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    float forecastlength_;
    float predictioncellspacing_;
    float tunnelcavityrangex_;
    float tunnelcavityrangey_;
    float inversionarearangex_;
    float inversionarearangey_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// -------------------------------------------------------------------

class ProjectBaseInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ProjectBaseInfo) */
{
  public:
    ProjectBaseInfo();
    virtual ~ProjectBaseInfo();

    ProjectBaseInfo(const ProjectBaseInfo &from);

    inline ProjectBaseInfo &operator=(const ProjectBaseInfo &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    ProjectBaseInfo(ProjectBaseInfo &&from) noexcept
        : ProjectBaseInfo()
    {
        *this = ::std::move(from);
    }

    inline ProjectBaseInfo &operator=(ProjectBaseInfo &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const ProjectBaseInfo &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const ProjectBaseInfo *internal_default_instance()
    {
        return reinterpret_cast<const ProjectBaseInfo *>(
            &_ProjectBaseInfo_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        8;

    void Swap(ProjectBaseInfo *other);
    friend void swap(ProjectBaseInfo &a, ProjectBaseInfo &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline ProjectBaseInfo *New() const final
    {
        return CreateMaybeMessage<ProjectBaseInfo>(nullptr);
    }

    ProjectBaseInfo *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<ProjectBaseInfo>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const ProjectBaseInfo &from);
    void MergeFrom(const ProjectBaseInfo &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(ProjectBaseInfo *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // string projectName = 1;
    void clear_projectname();
    static const int kProjectNameFieldNumber = 1;
    const ::std::string &projectname() const;
    void set_projectname(const ::std::string &value);
#if LANG_CXX11
    void set_projectname(::std::string &&value);
#endif
    void set_projectname(const char *value);
    void set_projectname(const char *value, size_t size);
    ::std::string *mutable_projectname();
    ::std::string *release_projectname();
    void set_allocated_projectname(::std::string *projectname);

    // string projectVersion = 2;
    void clear_projectversion();
    static const int kProjectVersionFieldNumber = 2;
    const ::std::string &projectversion() const;
    void set_projectversion(const ::std::string &value);
#if LANG_CXX11
    void set_projectversion(::std::string &&value);
#endif
    void set_projectversion(const char *value);
    void set_projectversion(const char *value, size_t size);
    ::std::string *mutable_projectversion();
    ::std::string *release_projectversion();
    void set_allocated_projectversion(::std::string *projectversion);

    // @@protoc_insertion_point(class_scope:pb.ProjectBaseInfo)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    ::google::protobuf::internal::ArenaStringPtr projectname_;
    ::google::protobuf::internal::ArenaStringPtr projectversion_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// -------------------------------------------------------------------

class ProjectInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ProjectInfo) */
{
  public:
    ProjectInfo();
    virtual ~ProjectInfo();

    ProjectInfo(const ProjectInfo &from);

    inline ProjectInfo &operator=(const ProjectInfo &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    ProjectInfo(ProjectInfo &&from) noexcept
        : ProjectInfo()
    {
        *this = ::std::move(from);
    }

    inline ProjectInfo &operator=(ProjectInfo &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    static const ::google::protobuf::Descriptor *descriptor()
    {
        return default_instance().GetDescriptor();
    }
    static const ProjectInfo &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const ProjectInfo *internal_default_instance()
    {
        return reinterpret_cast<const ProjectInfo *>(
            &_ProjectInfo_default_instance_);
    }
    static constexpr int kIndexInFileMessages =
        9;

    void Swap(ProjectInfo *other);
    friend void swap(ProjectInfo &a, ProjectInfo &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline ProjectInfo *New() const final
    {
        return CreateMaybeMessage<ProjectInfo>(nullptr);
    }

    ProjectInfo *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<ProjectInfo>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const ProjectInfo &from);
    void MergeFrom(const ProjectInfo &from);
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    static const char *_InternalParse(const char *begin, const char *end, void *object, ::google::protobuf::internal::ParseContext *ctx);
    ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
#else
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream *input) final;
#endif // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(ProjectInfo *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return nullptr;
    }
    inline void *MaybeArenaPtr() const
    {
        return nullptr;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // repeated .pb.Vec2d halfLifeCurveDataList = 6;
    int halflifecurvedatalist_size() const;
    void clear_halflifecurvedatalist();
    static const int kHalfLifeCurveDataListFieldNumber = 6;
    ::pb::Vec2d *mutable_halflifecurvedatalist(int index);
    ::google::protobuf::RepeatedPtrField<::pb::Vec2d> *
    mutable_halflifecurvedatalist();
    const ::pb::Vec2d &halflifecurvedatalist(int index) const;
    ::pb::Vec2d *add_halflifecurvedatalist();
    const ::google::protobuf::RepeatedPtrField<::pb::Vec2d> &
    halflifecurvedatalist() const;

    // .pb.ProjectBaseInfo projectBaseInfo = 1;
    bool has_projectbaseinfo() const;
    void clear_projectbaseinfo();
    static const int kProjectBaseInfoFieldNumber = 1;
    const ::pb::ProjectBaseInfo &projectbaseinfo() const;
    ::pb::ProjectBaseInfo *release_projectbaseinfo();
    ::pb::ProjectBaseInfo *mutable_projectbaseinfo();
    void set_allocated_projectbaseinfo(::pb::ProjectBaseInfo *projectbaseinfo);

    // .pb.ObservationSystemSetting obSystemSetting = 2;
    bool has_obsystemsetting() const;
    void clear_obsystemsetting();
    static const int kObSystemSettingFieldNumber = 2;
    const ::pb::ObservationSystemSetting &obsystemsetting() const;
    ::pb::ObservationSystemSetting *release_obsystemsetting();
    ::pb::ObservationSystemSetting *mutable_obsystemsetting();
    void set_allocated_obsystemsetting(::pb::ObservationSystemSetting *obsystemsetting);

    // .pb.DataPreprocessInfo dataPreprocess = 3;
    bool has_datapreprocess() const;
    void clear_datapreprocess();
    static const int kDataPreprocessFieldNumber = 3;
    const ::pb::DataPreprocessInfo &datapreprocess() const;
    ::pb::DataPreprocessInfo *release_datapreprocess();
    ::pb::DataPreprocessInfo *mutable_datapreprocess();
    void set_allocated_datapreprocess(::pb::DataPreprocessInfo *datapreprocess);

    // .pb.ModelingParam modelingParam = 4;
    bool has_modelingparam() const;
    void clear_modelingparam();
    static const int kModelingParamFieldNumber = 4;
    const ::pb::ModelingParam &modelingparam() const;
    ::pb::ModelingParam *release_modelingparam();
    ::pb::ModelingParam *mutable_modelingparam();
    void set_allocated_modelingparam(::pb::ModelingParam *modelingparam);

    // .pb.Data3d inversionProcessResult = 5;
    bool has_inversionprocessresult() const;
    void clear_inversionprocessresult();
    static const int kInversionProcessResultFieldNumber = 5;
    const ::pb::Data3d &inversionprocessresult() const;
    ::pb::Data3d *release_inversionprocessresult();
    ::pb::Data3d *mutable_inversionprocessresult();
    void set_allocated_inversionprocessresult(::pb::Data3d *inversionprocessresult);

    // .pb.ForwardModelingParaSetting simForwardParams = 7;
    bool has_simforwardparams() const;
    void clear_simforwardparams();
    static const int kSimForwardParamsFieldNumber = 7;
    const ::pb::ForwardModelingParaSetting &simforwardparams() const;
    ::pb::ForwardModelingParaSetting *release_simforwardparams();
    ::pb::ForwardModelingParaSetting *mutable_simforwardparams();
    void set_allocated_simforwardparams(::pb::ForwardModelingParaSetting *simforwardparams);

    // @@protoc_insertion_point(class_scope:pb.ProjectInfo)
  private:
    class HasBitSetters;

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    ::google::protobuf::RepeatedPtrField<::pb::Vec2d> halflifecurvedatalist_;
    ::pb::ProjectBaseInfo *projectbaseinfo_;
    ::pb::ObservationSystemSetting *obsystemsetting_;
    ::pb::DataPreprocessInfo *datapreprocess_;
    ::pb::ModelingParam *modelingparam_;
    ::pb::Data3d *inversionprocessresult_;
    ::pb::ForwardModelingParaSetting *simforwardparams_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_Project_2epb;
};
// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif // __GNUC__
// Vec3d

// double x = 1;
inline void Vec3d::clear_x()
{
    x_ = 0;
}
inline double Vec3d::x() const
{
    // @@protoc_insertion_point(field_get:pb.Vec3d.x)
    return x_;
}
inline void Vec3d::set_x(double value)
{

    x_ = value;
    // @@protoc_insertion_point(field_set:pb.Vec3d.x)
}

// double y = 2;
inline void Vec3d::clear_y()
{
    y_ = 0;
}
inline double Vec3d::y() const
{
    // @@protoc_insertion_point(field_get:pb.Vec3d.y)
    return y_;
}
inline void Vec3d::set_y(double value)
{

    y_ = value;
    // @@protoc_insertion_point(field_set:pb.Vec3d.y)
}

// double z = 3;
inline void Vec3d::clear_z()
{
    z_ = 0;
}
inline double Vec3d::z() const
{
    // @@protoc_insertion_point(field_get:pb.Vec3d.z)
    return z_;
}
inline void Vec3d::set_z(double value)
{

    z_ = value;
    // @@protoc_insertion_point(field_set:pb.Vec3d.z)
}

// -------------------------------------------------------------------

// Vec2d

// double x = 1;
inline void Vec2d::clear_x()
{
    x_ = 0;
}
inline double Vec2d::x() const
{
    // @@protoc_insertion_point(field_get:pb.Vec2d.x)
    return x_;
}
inline void Vec2d::set_x(double value)
{

    x_ = value;
    // @@protoc_insertion_point(field_set:pb.Vec2d.x)
}

// double y = 2;
inline void Vec2d::clear_y()
{
    y_ = 0;
}
inline double Vec2d::y() const
{
    // @@protoc_insertion_point(field_get:pb.Vec2d.y)
    return y_;
}
inline void Vec2d::set_y(double value)
{

    y_ = value;
    // @@protoc_insertion_point(field_set:pb.Vec2d.y)
}

// -------------------------------------------------------------------

// Data1d

// repeated double data = 1;
inline int Data1d::data_size() const
{
    return data_.size();
}
inline void Data1d::clear_data()
{
    data_.Clear();
}
inline double Data1d::data(int index) const
{
    // @@protoc_insertion_point(field_get:pb.Data1d.data)
    return data_.Get(index);
}
inline void Data1d::set_data(int index, double value)
{
    data_.Set(index, value);
    // @@protoc_insertion_point(field_set:pb.Data1d.data)
}
inline void Data1d::add_data(double value)
{
    data_.Add(value);
    // @@protoc_insertion_point(field_add:pb.Data1d.data)
}
inline const ::google::protobuf::RepeatedField<double> &
Data1d::data() const
{
    // @@protoc_insertion_point(field_list:pb.Data1d.data)
    return data_;
}
inline ::google::protobuf::RepeatedField<double> *
Data1d::mutable_data()
{
    // @@protoc_insertion_point(field_mutable_list:pb.Data1d.data)
    return &data_;
}

// uint32 rows = 2;
inline void Data1d::clear_rows()
{
    rows_ = 0u;
}
inline ::google::protobuf::uint32 Data1d::rows() const
{
    // @@protoc_insertion_point(field_get:pb.Data1d.rows)
    return rows_;
}
inline void Data1d::set_rows(::google::protobuf::uint32 value)
{

    rows_ = value;
    // @@protoc_insertion_point(field_set:pb.Data1d.rows)
}

// -------------------------------------------------------------------

// Data3d

// repeated double data = 1;
inline int Data3d::data_size() const
{
    return data_.size();
}
inline void Data3d::clear_data()
{
    data_.Clear();
}
inline double Data3d::data(int index) const
{
    // @@protoc_insertion_point(field_get:pb.Data3d.data)
    return data_.Get(index);
}
inline void Data3d::set_data(int index, double value)
{
    data_.Set(index, value);
    // @@protoc_insertion_point(field_set:pb.Data3d.data)
}
inline void Data3d::add_data(double value)
{
    data_.Add(value);
    // @@protoc_insertion_point(field_add:pb.Data3d.data)
}
inline const ::google::protobuf::RepeatedField<double> &
Data3d::data() const
{
    // @@protoc_insertion_point(field_list:pb.Data3d.data)
    return data_;
}
inline ::google::protobuf::RepeatedField<double> *
Data3d::mutable_data()
{
    // @@protoc_insertion_point(field_mutable_list:pb.Data3d.data)
    return &data_;
}

// uint32 x = 2;
inline void Data3d::clear_x()
{
    x_ = 0u;
}
inline ::google::protobuf::uint32 Data3d::x() const
{
    // @@protoc_insertion_point(field_get:pb.Data3d.x)
    return x_;
}
inline void Data3d::set_x(::google::protobuf::uint32 value)
{

    x_ = value;
    // @@protoc_insertion_point(field_set:pb.Data3d.x)
}

// uint32 y = 3;
inline void Data3d::clear_y()
{
    y_ = 0u;
}
inline ::google::protobuf::uint32 Data3d::y() const
{
    // @@protoc_insertion_point(field_get:pb.Data3d.y)
    return y_;
}
inline void Data3d::set_y(::google::protobuf::uint32 value)
{

    y_ = value;
    // @@protoc_insertion_point(field_set:pb.Data3d.y)
}

// uint32 z = 4;
inline void Data3d::clear_z()
{
    z_ = 0u;
}
inline ::google::protobuf::uint32 Data3d::z() const
{
    // @@protoc_insertion_point(field_get:pb.Data3d.z)
    return z_;
}
inline void Data3d::set_z(::google::protobuf::uint32 value)
{

    z_ = value;
    // @@protoc_insertion_point(field_set:pb.Data3d.z)
}

// -------------------------------------------------------------------

// ObservationSystemSetting

// float faceWidth = 1;
inline void ObservationSystemSetting::clear_facewidth()
{
    facewidth_ = 0;
}
inline float ObservationSystemSetting::facewidth() const
{
    // @@protoc_insertion_point(field_get:pb.ObservationSystemSetting.faceWidth)
    return facewidth_;
}
inline void ObservationSystemSetting::set_facewidth(float value)
{

    facewidth_ = value;
    // @@protoc_insertion_point(field_set:pb.ObservationSystemSetting.faceWidth)
}

// float faceHeight = 2;
inline void ObservationSystemSetting::clear_faceheight()
{
    faceheight_ = 0;
}
inline float ObservationSystemSetting::faceheight() const
{
    // @@protoc_insertion_point(field_get:pb.ObservationSystemSetting.faceHeight)
    return faceheight_;
}
inline void ObservationSystemSetting::set_faceheight(float value)
{

    faceheight_ = value;
    // @@protoc_insertion_point(field_set:pb.ObservationSystemSetting.faceHeight)
}

// .pb.Vec3d facePosition = 3;
inline bool ObservationSystemSetting::has_faceposition() const
{
    return this != internal_default_instance() && faceposition_ != nullptr;
}
inline void ObservationSystemSetting::clear_faceposition()
{
    if (GetArenaNoVirtual() == nullptr && faceposition_ != nullptr)
    {
        delete faceposition_;
    }
    faceposition_ = nullptr;
}
inline const ::pb::Vec3d &ObservationSystemSetting::faceposition() const
{
    const ::pb::Vec3d *p = faceposition_;
    // @@protoc_insertion_point(field_get:pb.ObservationSystemSetting.facePosition)
    return p != nullptr ? *p : *reinterpret_cast<const ::pb::Vec3d *>(
                                   &::pb::_Vec3d_default_instance_);
}
inline ::pb::Vec3d *ObservationSystemSetting::release_faceposition()
{
    // @@protoc_insertion_point(field_release:pb.ObservationSystemSetting.facePosition)

    ::pb::Vec3d *temp = faceposition_;
    faceposition_     = nullptr;
    return temp;
}
inline ::pb::Vec3d *ObservationSystemSetting::mutable_faceposition()
{

    if (faceposition_ == nullptr)
    {
        auto *p       = CreateMaybeMessage<::pb::Vec3d>(GetArenaNoVirtual());
        faceposition_ = p;
    }
    // @@protoc_insertion_point(field_mutable:pb.ObservationSystemSetting.facePosition)
    return faceposition_;
}
inline void ObservationSystemSetting::set_allocated_faceposition(::pb::Vec3d *faceposition)
{
    ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
    if (message_arena == nullptr)
    {
        delete faceposition_;
    }
    if (faceposition)
    {
        ::google::protobuf::Arena *submessage_arena = nullptr;
        if (message_arena != submessage_arena)
        {
            faceposition = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, faceposition, submessage_arena);
        }
    }
    else
    {
    }
    faceposition_ = faceposition;
    // @@protoc_insertion_point(field_set_allocated:pb.ObservationSystemSetting.facePosition)
}

// repeated .pb.Vec3d powerSupplyPointData = 4;
inline int ObservationSystemSetting::powersupplypointdata_size() const
{
    return powersupplypointdata_.size();
}
inline void ObservationSystemSetting::clear_powersupplypointdata()
{
    powersupplypointdata_.Clear();
}
inline ::pb::Vec3d *ObservationSystemSetting::mutable_powersupplypointdata(int index)
{
    // @@protoc_insertion_point(field_mutable:pb.ObservationSystemSetting.powerSupplyPointData)
    return powersupplypointdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::pb::Vec3d> *
ObservationSystemSetting::mutable_powersupplypointdata()
{
    // @@protoc_insertion_point(field_mutable_list:pb.ObservationSystemSetting.powerSupplyPointData)
    return &powersupplypointdata_;
}
inline const ::pb::Vec3d &ObservationSystemSetting::powersupplypointdata(int index) const
{
    // @@protoc_insertion_point(field_get:pb.ObservationSystemSetting.powerSupplyPointData)
    return powersupplypointdata_.Get(index);
}
inline ::pb::Vec3d *ObservationSystemSetting::add_powersupplypointdata()
{
    // @@protoc_insertion_point(field_add:pb.ObservationSystemSetting.powerSupplyPointData)
    return powersupplypointdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField<::pb::Vec3d> &
ObservationSystemSetting::powersupplypointdata() const
{
    // @@protoc_insertion_point(field_list:pb.ObservationSystemSetting.powerSupplyPointData)
    return powersupplypointdata_;
}

// repeated .pb.Vec3d measuringPointData = 5;
inline int ObservationSystemSetting::measuringpointdata_size() const
{
    return measuringpointdata_.size();
}
inline void ObservationSystemSetting::clear_measuringpointdata()
{
    measuringpointdata_.Clear();
}
inline ::pb::Vec3d *ObservationSystemSetting::mutable_measuringpointdata(int index)
{
    // @@protoc_insertion_point(field_mutable:pb.ObservationSystemSetting.measuringPointData)
    return measuringpointdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::pb::Vec3d> *
ObservationSystemSetting::mutable_measuringpointdata()
{
    // @@protoc_insertion_point(field_mutable_list:pb.ObservationSystemSetting.measuringPointData)
    return &measuringpointdata_;
}
inline const ::pb::Vec3d &ObservationSystemSetting::measuringpointdata(int index) const
{
    // @@protoc_insertion_point(field_get:pb.ObservationSystemSetting.measuringPointData)
    return measuringpointdata_.Get(index);
}
inline ::pb::Vec3d *ObservationSystemSetting::add_measuringpointdata()
{
    // @@protoc_insertion_point(field_add:pb.ObservationSystemSetting.measuringPointData)
    return measuringpointdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField<::pb::Vec3d> &
ObservationSystemSetting::measuringpointdata() const
{
    // @@protoc_insertion_point(field_list:pb.ObservationSystemSetting.measuringPointData)
    return measuringpointdata_;
}

// repeated float elecCircleDisVec = 6;
inline int ObservationSystemSetting::eleccircledisvec_size() const
{
    return eleccircledisvec_.size();
}
inline void ObservationSystemSetting::clear_eleccircledisvec()
{
    eleccircledisvec_.Clear();
}
inline float ObservationSystemSetting::eleccircledisvec(int index) const
{
    // @@protoc_insertion_point(field_get:pb.ObservationSystemSetting.elecCircleDisVec)
    return eleccircledisvec_.Get(index);
}
inline void ObservationSystemSetting::set_eleccircledisvec(int index, float value)
{
    eleccircledisvec_.Set(index, value);
    // @@protoc_insertion_point(field_set:pb.ObservationSystemSetting.elecCircleDisVec)
}
inline void ObservationSystemSetting::add_eleccircledisvec(float value)
{
    eleccircledisvec_.Add(value);
    // @@protoc_insertion_point(field_add:pb.ObservationSystemSetting.elecCircleDisVec)
}
inline const ::google::protobuf::RepeatedField<float> &
ObservationSystemSetting::eleccircledisvec() const
{
    // @@protoc_insertion_point(field_list:pb.ObservationSystemSetting.elecCircleDisVec)
    return eleccircledisvec_;
}
inline ::google::protobuf::RepeatedField<float> *
ObservationSystemSetting::mutable_eleccircledisvec()
{
    // @@protoc_insertion_point(field_mutable_list:pb.ObservationSystemSetting.elecCircleDisVec)
    return &eleccircledisvec_;
}

// .pb.DeviceType deviceType = 7;
inline void ObservationSystemSetting::clear_devicetype()
{
    devicetype_ = 0;
}
inline ::pb::DeviceType ObservationSystemSetting::devicetype() const
{
    // @@protoc_insertion_point(field_get:pb.ObservationSystemSetting.deviceType)
    return static_cast<::pb::DeviceType>(devicetype_);
}
inline void ObservationSystemSetting::set_devicetype(::pb::DeviceType value)
{

    devicetype_ = value;
    // @@protoc_insertion_point(field_set:pb.ObservationSystemSetting.deviceType)
}

// string mileageNumber = 8;
inline void ObservationSystemSetting::clear_mileagenumber()
{
    mileagenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string &ObservationSystemSetting::mileagenumber() const
{
    // @@protoc_insertion_point(field_get:pb.ObservationSystemSetting.mileageNumber)
    return mileagenumber_.GetNoArena();
}
inline void ObservationSystemSetting::set_mileagenumber(const ::std::string &value)
{

    mileagenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:pb.ObservationSystemSetting.mileageNumber)
}
#if LANG_CXX11
inline void ObservationSystemSetting::set_mileagenumber(::std::string &&value)
{

    mileagenumber_.SetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:pb.ObservationSystemSetting.mileageNumber)
}
#endif
inline void ObservationSystemSetting::set_mileagenumber(const char *value)
{
    GOOGLE_DCHECK(value != nullptr);

    mileagenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:pb.ObservationSystemSetting.mileageNumber)
}
inline void ObservationSystemSetting::set_mileagenumber(const char *value, size_t size)
{

    mileagenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                              ::std::string(reinterpret_cast<const char *>(value), size));
    // @@protoc_insertion_point(field_set_pointer:pb.ObservationSystemSetting.mileageNumber)
}
inline ::std::string *ObservationSystemSetting::mutable_mileagenumber()
{

    // @@protoc_insertion_point(field_mutable:pb.ObservationSystemSetting.mileageNumber)
    return mileagenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string *ObservationSystemSetting::release_mileagenumber()
{
    // @@protoc_insertion_point(field_release:pb.ObservationSystemSetting.mileageNumber)

    return mileagenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObservationSystemSetting::set_allocated_mileagenumber(::std::string *mileagenumber)
{
    if (mileagenumber != nullptr)
    {
    }
    else
    {
    }
    mileagenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mileagenumber);
    // @@protoc_insertion_point(field_set_allocated:pb.ObservationSystemSetting.mileageNumber)
}

// .pb.ExcavationDir excavationDir = 9;
inline void ObservationSystemSetting::clear_excavationdir()
{
    excavationdir_ = 0;
}
inline ::pb::ExcavationDir ObservationSystemSetting::excavationdir() const
{
    // @@protoc_insertion_point(field_get:pb.ObservationSystemSetting.excavationDir)
    return static_cast<::pb::ExcavationDir>(excavationdir_);
}
inline void ObservationSystemSetting::set_excavationdir(::pb::ExcavationDir value)
{

    excavationdir_ = value;
    // @@protoc_insertion_point(field_set:pb.ObservationSystemSetting.excavationDir)
}

// -------------------------------------------------------------------

// ForwardModelingParaSetting

// .pb.PotentialDeviceSelectionSwitch potentialDeviceSelectionSwitch = 1;
inline void ForwardModelingParaSetting::clear_potentialdeviceselectionswitch()
{
    potentialdeviceselectionswitch_ = 0;
}
inline ::pb::PotentialDeviceSelectionSwitch ForwardModelingParaSetting::potentialdeviceselectionswitch() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.potentialDeviceSelectionSwitch)
    return static_cast<::pb::PotentialDeviceSelectionSwitch>(potentialdeviceselectionswitch_);
}
inline void ForwardModelingParaSetting::set_potentialdeviceselectionswitch(::pb::PotentialDeviceSelectionSwitch value)
{

    potentialdeviceselectionswitch_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.potentialDeviceSelectionSwitch)
}

// uint32 currentINumX = 2;
inline void ForwardModelingParaSetting::clear_currentinumx()
{
    currentinumx_ = 0u;
}
inline ::google::protobuf::uint32 ForwardModelingParaSetting::currentinumx() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.currentINumX)
    return currentinumx_;
}
inline void ForwardModelingParaSetting::set_currentinumx(::google::protobuf::uint32 value)
{

    currentinumx_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.currentINumX)
}

// uint32 currentINumY = 3;
inline void ForwardModelingParaSetting::clear_currentinumy()
{
    currentinumy_ = 0u;
}
inline ::google::protobuf::uint32 ForwardModelingParaSetting::currentinumy() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.currentINumY)
    return currentinumy_;
}
inline void ForwardModelingParaSetting::set_currentinumy(::google::protobuf::uint32 value)
{

    currentinumy_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.currentINumY)
}

// uint32 currentINumZ = 4;
inline void ForwardModelingParaSetting::clear_currentinumz()
{
    currentinumz_ = 0u;
}
inline ::google::protobuf::uint32 ForwardModelingParaSetting::currentinumz() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.currentINumZ)
    return currentinumz_;
}
inline void ForwardModelingParaSetting::set_currentinumz(::google::protobuf::uint32 value)
{

    currentinumz_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.currentINumZ)
}

// double II = 5;
inline void ForwardModelingParaSetting::clear_ii()
{
    ii_ = 0;
}
inline double ForwardModelingParaSetting::ii() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.II)
    return ii_;
}
inline void ForwardModelingParaSetting::set_ii(double value)
{

    ii_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.II)
}

// double CII = 6;
inline void ForwardModelingParaSetting::clear_cii()
{
    cii_ = 0;
}
inline double ForwardModelingParaSetting::cii() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.CII)
    return cii_;
}
inline void ForwardModelingParaSetting::set_cii(double value)
{

    cii_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.CII)
}

// double sgM0Value = 7;
inline void ForwardModelingParaSetting::clear_sgm0value()
{
    sgm0value_ = 0;
}
inline double ForwardModelingParaSetting::sgm0value() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.sgM0Value)
    return sgm0value_;
}
inline void ForwardModelingParaSetting::set_sgm0value(double value)
{

    sgm0value_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.sgM0Value)
}

// uint32 inverX1 = 8;
inline void ForwardModelingParaSetting::clear_inverx1()
{
    inverx1_ = 0u;
}
inline ::google::protobuf::uint32 ForwardModelingParaSetting::inverx1() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.inverX1)
    return inverx1_;
}
inline void ForwardModelingParaSetting::set_inverx1(::google::protobuf::uint32 value)
{

    inverx1_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.inverX1)
}

// uint32 inverX2 = 9;
inline void ForwardModelingParaSetting::clear_inverx2()
{
    inverx2_ = 0u;
}
inline ::google::protobuf::uint32 ForwardModelingParaSetting::inverx2() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.inverX2)
    return inverx2_;
}
inline void ForwardModelingParaSetting::set_inverx2(::google::protobuf::uint32 value)
{

    inverx2_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.inverX2)
}

// uint32 inverY1 = 10;
inline void ForwardModelingParaSetting::clear_invery1()
{
    invery1_ = 0u;
}
inline ::google::protobuf::uint32 ForwardModelingParaSetting::invery1() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.inverY1)
    return invery1_;
}
inline void ForwardModelingParaSetting::set_invery1(::google::protobuf::uint32 value)
{

    invery1_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.inverY1)
}

// uint32 inverY2 = 11;
inline void ForwardModelingParaSetting::clear_invery2()
{
    invery2_ = 0u;
}
inline ::google::protobuf::uint32 ForwardModelingParaSetting::invery2() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.inverY2)
    return invery2_;
}
inline void ForwardModelingParaSetting::set_invery2(::google::protobuf::uint32 value)
{

    invery2_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.inverY2)
}

// uint32 inverZ1 = 12;
inline void ForwardModelingParaSetting::clear_inverz1()
{
    inverz1_ = 0u;
}
inline ::google::protobuf::uint32 ForwardModelingParaSetting::inverz1() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.inverZ1)
    return inverz1_;
}
inline void ForwardModelingParaSetting::set_inverz1(::google::protobuf::uint32 value)
{

    inverz1_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.inverZ1)
}

// uint32 inverZ2 = 13;
inline void ForwardModelingParaSetting::clear_inverz2()
{
    inverz2_ = 0u;
}
inline ::google::protobuf::uint32 ForwardModelingParaSetting::inverz2() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.inverZ2)
    return inverz2_;
}
inline void ForwardModelingParaSetting::set_inverz2(::google::protobuf::uint32 value)
{

    inverz2_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.inverZ2)
}

// float actual_begin_x = 14;
inline void ForwardModelingParaSetting::clear_actual_begin_x()
{
    actual_begin_x_ = 0;
}
inline float ForwardModelingParaSetting::actual_begin_x() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.actual_begin_x)
    return actual_begin_x_;
}
inline void ForwardModelingParaSetting::set_actual_begin_x(float value)
{

    actual_begin_x_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.actual_begin_x)
}

// float actual_end_x = 15;
inline void ForwardModelingParaSetting::clear_actual_end_x()
{
    actual_end_x_ = 0;
}
inline float ForwardModelingParaSetting::actual_end_x() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.actual_end_x)
    return actual_end_x_;
}
inline void ForwardModelingParaSetting::set_actual_end_x(float value)
{

    actual_end_x_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.actual_end_x)
}

// float actual_begin_y = 16;
inline void ForwardModelingParaSetting::clear_actual_begin_y()
{
    actual_begin_y_ = 0;
}
inline float ForwardModelingParaSetting::actual_begin_y() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.actual_begin_y)
    return actual_begin_y_;
}
inline void ForwardModelingParaSetting::set_actual_begin_y(float value)
{

    actual_begin_y_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.actual_begin_y)
}

// float actual_end_y = 17;
inline void ForwardModelingParaSetting::clear_actual_end_y()
{
    actual_end_y_ = 0;
}
inline float ForwardModelingParaSetting::actual_end_y() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.actual_end_y)
    return actual_end_y_;
}
inline void ForwardModelingParaSetting::set_actual_end_y(float value)
{

    actual_end_y_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.actual_end_y)
}

// float actual_begin_z = 18;
inline void ForwardModelingParaSetting::clear_actual_begin_z()
{
    actual_begin_z_ = 0;
}
inline float ForwardModelingParaSetting::actual_begin_z() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.actual_begin_z)
    return actual_begin_z_;
}
inline void ForwardModelingParaSetting::set_actual_begin_z(float value)
{

    actual_begin_z_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.actual_begin_z)
}

// float actual_end_z = 19;
inline void ForwardModelingParaSetting::clear_actual_end_z()
{
    actual_end_z_ = 0;
}
inline float ForwardModelingParaSetting::actual_end_z() const
{
    // @@protoc_insertion_point(field_get:pb.ForwardModelingParaSetting.actual_end_z)
    return actual_end_z_;
}
inline void ForwardModelingParaSetting::set_actual_end_z(float value)
{

    actual_end_z_ = value;
    // @@protoc_insertion_point(field_set:pb.ForwardModelingParaSetting.actual_end_z)
}

// -------------------------------------------------------------------

// DataPreprocessInfo

// .pb.Data1d badPoints = 1;
inline bool DataPreprocessInfo::has_badpoints() const
{
    return this != internal_default_instance() && badpoints_ != nullptr;
}
inline void DataPreprocessInfo::clear_badpoints()
{
    if (GetArenaNoVirtual() == nullptr && badpoints_ != nullptr)
    {
        delete badpoints_;
    }
    badpoints_ = nullptr;
}
inline const ::pb::Data1d &DataPreprocessInfo::badpoints() const
{
    const ::pb::Data1d *p = badpoints_;
    // @@protoc_insertion_point(field_get:pb.DataPreprocessInfo.badPoints)
    return p != nullptr ? *p : *reinterpret_cast<const ::pb::Data1d *>(
                                   &::pb::_Data1d_default_instance_);
}
inline ::pb::Data1d *DataPreprocessInfo::release_badpoints()
{
    // @@protoc_insertion_point(field_release:pb.DataPreprocessInfo.badPoints)

    ::pb::Data1d *temp = badpoints_;
    badpoints_         = nullptr;
    return temp;
}
inline ::pb::Data1d *DataPreprocessInfo::mutable_badpoints()
{

    if (badpoints_ == nullptr)
    {
        auto *p    = CreateMaybeMessage<::pb::Data1d>(GetArenaNoVirtual());
        badpoints_ = p;
    }
    // @@protoc_insertion_point(field_mutable:pb.DataPreprocessInfo.badPoints)
    return badpoints_;
}
inline void DataPreprocessInfo::set_allocated_badpoints(::pb::Data1d *badpoints)
{
    ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
    if (message_arena == nullptr)
    {
        delete badpoints_;
    }
    if (badpoints)
    {
        ::google::protobuf::Arena *submessage_arena = nullptr;
        if (message_arena != submessage_arena)
        {
            badpoints = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, badpoints, submessage_arena);
        }
    }
    else
    {
    }
    badpoints_ = badpoints;
    // @@protoc_insertion_point(field_set_allocated:pb.DataPreprocessInfo.badPoints)
}

// repeated double observeDataList = 2;
inline int DataPreprocessInfo::observedatalist_size() const
{
    return observedatalist_.size();
}
inline void DataPreprocessInfo::clear_observedatalist()
{
    observedatalist_.Clear();
}
inline double DataPreprocessInfo::observedatalist(int index) const
{
    // @@protoc_insertion_point(field_get:pb.DataPreprocessInfo.observeDataList)
    return observedatalist_.Get(index);
}
inline void DataPreprocessInfo::set_observedatalist(int index, double value)
{
    observedatalist_.Set(index, value);
    // @@protoc_insertion_point(field_set:pb.DataPreprocessInfo.observeDataList)
}
inline void DataPreprocessInfo::add_observedatalist(double value)
{
    observedatalist_.Add(value);
    // @@protoc_insertion_point(field_add:pb.DataPreprocessInfo.observeDataList)
}
inline const ::google::protobuf::RepeatedField<double> &
DataPreprocessInfo::observedatalist() const
{
    // @@protoc_insertion_point(field_list:pb.DataPreprocessInfo.observeDataList)
    return observedatalist_;
}
inline ::google::protobuf::RepeatedField<double> *
DataPreprocessInfo::mutable_observedatalist()
{
    // @@protoc_insertion_point(field_mutable_list:pb.DataPreprocessInfo.observeDataList)
    return &observedatalist_;
}

// repeated double adjustmentDataVec = 3;
inline int DataPreprocessInfo::adjustmentdatavec_size() const
{
    return adjustmentdatavec_.size();
}
inline void DataPreprocessInfo::clear_adjustmentdatavec()
{
    adjustmentdatavec_.Clear();
}
inline double DataPreprocessInfo::adjustmentdatavec(int index) const
{
    // @@protoc_insertion_point(field_get:pb.DataPreprocessInfo.adjustmentDataVec)
    return adjustmentdatavec_.Get(index);
}
inline void DataPreprocessInfo::set_adjustmentdatavec(int index, double value)
{
    adjustmentdatavec_.Set(index, value);
    // @@protoc_insertion_point(field_set:pb.DataPreprocessInfo.adjustmentDataVec)
}
inline void DataPreprocessInfo::add_adjustmentdatavec(double value)
{
    adjustmentdatavec_.Add(value);
    // @@protoc_insertion_point(field_add:pb.DataPreprocessInfo.adjustmentDataVec)
}
inline const ::google::protobuf::RepeatedField<double> &
DataPreprocessInfo::adjustmentdatavec() const
{
    // @@protoc_insertion_point(field_list:pb.DataPreprocessInfo.adjustmentDataVec)
    return adjustmentdatavec_;
}
inline ::google::protobuf::RepeatedField<double> *
DataPreprocessInfo::mutable_adjustmentdatavec()
{
    // @@protoc_insertion_point(field_mutable_list:pb.DataPreprocessInfo.adjustmentDataVec)
    return &adjustmentdatavec_;
}

// -------------------------------------------------------------------

// ModelingParam

// float forecastLength = 1;
inline void ModelingParam::clear_forecastlength()
{
    forecastlength_ = 0;
}
inline float ModelingParam::forecastlength() const
{
    // @@protoc_insertion_point(field_get:pb.ModelingParam.forecastLength)
    return forecastlength_;
}
inline void ModelingParam::set_forecastlength(float value)
{

    forecastlength_ = value;
    // @@protoc_insertion_point(field_set:pb.ModelingParam.forecastLength)
}

// float predictionCellSpacing = 2;
inline void ModelingParam::clear_predictioncellspacing()
{
    predictioncellspacing_ = 0;
}
inline float ModelingParam::predictioncellspacing() const
{
    // @@protoc_insertion_point(field_get:pb.ModelingParam.predictionCellSpacing)
    return predictioncellspacing_;
}
inline void ModelingParam::set_predictioncellspacing(float value)
{

    predictioncellspacing_ = value;
    // @@protoc_insertion_point(field_set:pb.ModelingParam.predictionCellSpacing)
}

// float tunnelCavityRangeX = 3;
inline void ModelingParam::clear_tunnelcavityrangex()
{
    tunnelcavityrangex_ = 0;
}
inline float ModelingParam::tunnelcavityrangex() const
{
    // @@protoc_insertion_point(field_get:pb.ModelingParam.tunnelCavityRangeX)
    return tunnelcavityrangex_;
}
inline void ModelingParam::set_tunnelcavityrangex(float value)
{

    tunnelcavityrangex_ = value;
    // @@protoc_insertion_point(field_set:pb.ModelingParam.tunnelCavityRangeX)
}

// float tunnelCavityRangeY = 4;
inline void ModelingParam::clear_tunnelcavityrangey()
{
    tunnelcavityrangey_ = 0;
}
inline float ModelingParam::tunnelcavityrangey() const
{
    // @@protoc_insertion_point(field_get:pb.ModelingParam.tunnelCavityRangeY)
    return tunnelcavityrangey_;
}
inline void ModelingParam::set_tunnelcavityrangey(float value)
{

    tunnelcavityrangey_ = value;
    // @@protoc_insertion_point(field_set:pb.ModelingParam.tunnelCavityRangeY)
}

// float inversionAreaRangeX = 5;
inline void ModelingParam::clear_inversionarearangex()
{
    inversionarearangex_ = 0;
}
inline float ModelingParam::inversionarearangex() const
{
    // @@protoc_insertion_point(field_get:pb.ModelingParam.inversionAreaRangeX)
    return inversionarearangex_;
}
inline void ModelingParam::set_inversionarearangex(float value)
{

    inversionarearangex_ = value;
    // @@protoc_insertion_point(field_set:pb.ModelingParam.inversionAreaRangeX)
}

// float inversionAreaRangeY = 6;
inline void ModelingParam::clear_inversionarearangey()
{
    inversionarearangey_ = 0;
}
inline float ModelingParam::inversionarearangey() const
{
    // @@protoc_insertion_point(field_get:pb.ModelingParam.inversionAreaRangeY)
    return inversionarearangey_;
}
inline void ModelingParam::set_inversionarearangey(float value)
{

    inversionarearangey_ = value;
    // @@protoc_insertion_point(field_set:pb.ModelingParam.inversionAreaRangeY)
}

// -------------------------------------------------------------------

// ProjectBaseInfo

// string projectName = 1;
inline void ProjectBaseInfo::clear_projectname()
{
    projectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string &ProjectBaseInfo::projectname() const
{
    // @@protoc_insertion_point(field_get:pb.ProjectBaseInfo.projectName)
    return projectname_.GetNoArena();
}
inline void ProjectBaseInfo::set_projectname(const ::std::string &value)
{

    projectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:pb.ProjectBaseInfo.projectName)
}
#if LANG_CXX11
inline void ProjectBaseInfo::set_projectname(::std::string &&value)
{

    projectname_.SetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:pb.ProjectBaseInfo.projectName)
}
#endif
inline void ProjectBaseInfo::set_projectname(const char *value)
{
    GOOGLE_DCHECK(value != nullptr);

    projectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:pb.ProjectBaseInfo.projectName)
}
inline void ProjectBaseInfo::set_projectname(const char *value, size_t size)
{

    projectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                            ::std::string(reinterpret_cast<const char *>(value), size));
    // @@protoc_insertion_point(field_set_pointer:pb.ProjectBaseInfo.projectName)
}
inline ::std::string *ProjectBaseInfo::mutable_projectname()
{

    // @@protoc_insertion_point(field_mutable:pb.ProjectBaseInfo.projectName)
    return projectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string *ProjectBaseInfo::release_projectname()
{
    // @@protoc_insertion_point(field_release:pb.ProjectBaseInfo.projectName)

    return projectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectBaseInfo::set_allocated_projectname(::std::string *projectname)
{
    if (projectname != nullptr)
    {
    }
    else
    {
    }
    projectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), projectname);
    // @@protoc_insertion_point(field_set_allocated:pb.ProjectBaseInfo.projectName)
}

// string projectVersion = 2;
inline void ProjectBaseInfo::clear_projectversion()
{
    projectversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string &ProjectBaseInfo::projectversion() const
{
    // @@protoc_insertion_point(field_get:pb.ProjectBaseInfo.projectVersion)
    return projectversion_.GetNoArena();
}
inline void ProjectBaseInfo::set_projectversion(const ::std::string &value)
{

    projectversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:pb.ProjectBaseInfo.projectVersion)
}
#if LANG_CXX11
inline void ProjectBaseInfo::set_projectversion(::std::string &&value)
{

    projectversion_.SetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:pb.ProjectBaseInfo.projectVersion)
}
#endif
inline void ProjectBaseInfo::set_projectversion(const char *value)
{
    GOOGLE_DCHECK(value != nullptr);

    projectversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:pb.ProjectBaseInfo.projectVersion)
}
inline void ProjectBaseInfo::set_projectversion(const char *value, size_t size)
{

    projectversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                               ::std::string(reinterpret_cast<const char *>(value), size));
    // @@protoc_insertion_point(field_set_pointer:pb.ProjectBaseInfo.projectVersion)
}
inline ::std::string *ProjectBaseInfo::mutable_projectversion()
{

    // @@protoc_insertion_point(field_mutable:pb.ProjectBaseInfo.projectVersion)
    return projectversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string *ProjectBaseInfo::release_projectversion()
{
    // @@protoc_insertion_point(field_release:pb.ProjectBaseInfo.projectVersion)

    return projectversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectBaseInfo::set_allocated_projectversion(::std::string *projectversion)
{
    if (projectversion != nullptr)
    {
    }
    else
    {
    }
    projectversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), projectversion);
    // @@protoc_insertion_point(field_set_allocated:pb.ProjectBaseInfo.projectVersion)
}

// -------------------------------------------------------------------

// ProjectInfo

// .pb.ProjectBaseInfo projectBaseInfo = 1;
inline bool ProjectInfo::has_projectbaseinfo() const
{
    return this != internal_default_instance() && projectbaseinfo_ != nullptr;
}
inline void ProjectInfo::clear_projectbaseinfo()
{
    if (GetArenaNoVirtual() == nullptr && projectbaseinfo_ != nullptr)
    {
        delete projectbaseinfo_;
    }
    projectbaseinfo_ = nullptr;
}
inline const ::pb::ProjectBaseInfo &ProjectInfo::projectbaseinfo() const
{
    const ::pb::ProjectBaseInfo *p = projectbaseinfo_;
    // @@protoc_insertion_point(field_get:pb.ProjectInfo.projectBaseInfo)
    return p != nullptr ? *p : *reinterpret_cast<const ::pb::ProjectBaseInfo *>(
                                   &::pb::_ProjectBaseInfo_default_instance_);
}
inline ::pb::ProjectBaseInfo *ProjectInfo::release_projectbaseinfo()
{
    // @@protoc_insertion_point(field_release:pb.ProjectInfo.projectBaseInfo)

    ::pb::ProjectBaseInfo *temp = projectbaseinfo_;
    projectbaseinfo_            = nullptr;
    return temp;
}
inline ::pb::ProjectBaseInfo *ProjectInfo::mutable_projectbaseinfo()
{

    if (projectbaseinfo_ == nullptr)
    {
        auto *p          = CreateMaybeMessage<::pb::ProjectBaseInfo>(GetArenaNoVirtual());
        projectbaseinfo_ = p;
    }
    // @@protoc_insertion_point(field_mutable:pb.ProjectInfo.projectBaseInfo)
    return projectbaseinfo_;
}
inline void ProjectInfo::set_allocated_projectbaseinfo(::pb::ProjectBaseInfo *projectbaseinfo)
{
    ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
    if (message_arena == nullptr)
    {
        delete projectbaseinfo_;
    }
    if (projectbaseinfo)
    {
        ::google::protobuf::Arena *submessage_arena = nullptr;
        if (message_arena != submessage_arena)
        {
            projectbaseinfo = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, projectbaseinfo, submessage_arena);
        }
    }
    else
    {
    }
    projectbaseinfo_ = projectbaseinfo;
    // @@protoc_insertion_point(field_set_allocated:pb.ProjectInfo.projectBaseInfo)
}

// .pb.ObservationSystemSetting obSystemSetting = 2;
inline bool ProjectInfo::has_obsystemsetting() const
{
    return this != internal_default_instance() && obsystemsetting_ != nullptr;
}
inline void ProjectInfo::clear_obsystemsetting()
{
    if (GetArenaNoVirtual() == nullptr && obsystemsetting_ != nullptr)
    {
        delete obsystemsetting_;
    }
    obsystemsetting_ = nullptr;
}
inline const ::pb::ObservationSystemSetting &ProjectInfo::obsystemsetting() const
{
    const ::pb::ObservationSystemSetting *p = obsystemsetting_;
    // @@protoc_insertion_point(field_get:pb.ProjectInfo.obSystemSetting)
    return p != nullptr ? *p : *reinterpret_cast<const ::pb::ObservationSystemSetting *>(
                                   &::pb::_ObservationSystemSetting_default_instance_);
}
inline ::pb::ObservationSystemSetting *ProjectInfo::release_obsystemsetting()
{
    // @@protoc_insertion_point(field_release:pb.ProjectInfo.obSystemSetting)

    ::pb::ObservationSystemSetting *temp = obsystemsetting_;
    obsystemsetting_                     = nullptr;
    return temp;
}
inline ::pb::ObservationSystemSetting *ProjectInfo::mutable_obsystemsetting()
{

    if (obsystemsetting_ == nullptr)
    {
        auto *p          = CreateMaybeMessage<::pb::ObservationSystemSetting>(GetArenaNoVirtual());
        obsystemsetting_ = p;
    }
    // @@protoc_insertion_point(field_mutable:pb.ProjectInfo.obSystemSetting)
    return obsystemsetting_;
}
inline void ProjectInfo::set_allocated_obsystemsetting(::pb::ObservationSystemSetting *obsystemsetting)
{
    ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
    if (message_arena == nullptr)
    {
        delete obsystemsetting_;
    }
    if (obsystemsetting)
    {
        ::google::protobuf::Arena *submessage_arena = nullptr;
        if (message_arena != submessage_arena)
        {
            obsystemsetting = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, obsystemsetting, submessage_arena);
        }
    }
    else
    {
    }
    obsystemsetting_ = obsystemsetting;
    // @@protoc_insertion_point(field_set_allocated:pb.ProjectInfo.obSystemSetting)
}

// .pb.DataPreprocessInfo dataPreprocess = 3;
inline bool ProjectInfo::has_datapreprocess() const
{
    return this != internal_default_instance() && datapreprocess_ != nullptr;
}
inline void ProjectInfo::clear_datapreprocess()
{
    if (GetArenaNoVirtual() == nullptr && datapreprocess_ != nullptr)
    {
        delete datapreprocess_;
    }
    datapreprocess_ = nullptr;
}
inline const ::pb::DataPreprocessInfo &ProjectInfo::datapreprocess() const
{
    const ::pb::DataPreprocessInfo *p = datapreprocess_;
    // @@protoc_insertion_point(field_get:pb.ProjectInfo.dataPreprocess)
    return p != nullptr ? *p : *reinterpret_cast<const ::pb::DataPreprocessInfo *>(
                                   &::pb::_DataPreprocessInfo_default_instance_);
}
inline ::pb::DataPreprocessInfo *ProjectInfo::release_datapreprocess()
{
    // @@protoc_insertion_point(field_release:pb.ProjectInfo.dataPreprocess)

    ::pb::DataPreprocessInfo *temp = datapreprocess_;
    datapreprocess_                = nullptr;
    return temp;
}
inline ::pb::DataPreprocessInfo *ProjectInfo::mutable_datapreprocess()
{

    if (datapreprocess_ == nullptr)
    {
        auto *p         = CreateMaybeMessage<::pb::DataPreprocessInfo>(GetArenaNoVirtual());
        datapreprocess_ = p;
    }
    // @@protoc_insertion_point(field_mutable:pb.ProjectInfo.dataPreprocess)
    return datapreprocess_;
}
inline void ProjectInfo::set_allocated_datapreprocess(::pb::DataPreprocessInfo *datapreprocess)
{
    ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
    if (message_arena == nullptr)
    {
        delete datapreprocess_;
    }
    if (datapreprocess)
    {
        ::google::protobuf::Arena *submessage_arena = nullptr;
        if (message_arena != submessage_arena)
        {
            datapreprocess = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, datapreprocess, submessage_arena);
        }
    }
    else
    {
    }
    datapreprocess_ = datapreprocess;
    // @@protoc_insertion_point(field_set_allocated:pb.ProjectInfo.dataPreprocess)
}

// .pb.ModelingParam modelingParam = 4;
inline bool ProjectInfo::has_modelingparam() const
{
    return this != internal_default_instance() && modelingparam_ != nullptr;
}
inline void ProjectInfo::clear_modelingparam()
{
    if (GetArenaNoVirtual() == nullptr && modelingparam_ != nullptr)
    {
        delete modelingparam_;
    }
    modelingparam_ = nullptr;
}
inline const ::pb::ModelingParam &ProjectInfo::modelingparam() const
{
    const ::pb::ModelingParam *p = modelingparam_;
    // @@protoc_insertion_point(field_get:pb.ProjectInfo.modelingParam)
    return p != nullptr ? *p : *reinterpret_cast<const ::pb::ModelingParam *>(
                                   &::pb::_ModelingParam_default_instance_);
}
inline ::pb::ModelingParam *ProjectInfo::release_modelingparam()
{
    // @@protoc_insertion_point(field_release:pb.ProjectInfo.modelingParam)

    ::pb::ModelingParam *temp = modelingparam_;
    modelingparam_            = nullptr;
    return temp;
}
inline ::pb::ModelingParam *ProjectInfo::mutable_modelingparam()
{

    if (modelingparam_ == nullptr)
    {
        auto *p        = CreateMaybeMessage<::pb::ModelingParam>(GetArenaNoVirtual());
        modelingparam_ = p;
    }
    // @@protoc_insertion_point(field_mutable:pb.ProjectInfo.modelingParam)
    return modelingparam_;
}
inline void ProjectInfo::set_allocated_modelingparam(::pb::ModelingParam *modelingparam)
{
    ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
    if (message_arena == nullptr)
    {
        delete modelingparam_;
    }
    if (modelingparam)
    {
        ::google::protobuf::Arena *submessage_arena = nullptr;
        if (message_arena != submessage_arena)
        {
            modelingparam = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, modelingparam, submessage_arena);
        }
    }
    else
    {
    }
    modelingparam_ = modelingparam;
    // @@protoc_insertion_point(field_set_allocated:pb.ProjectInfo.modelingParam)
}

// .pb.Data3d inversionProcessResult = 5;
inline bool ProjectInfo::has_inversionprocessresult() const
{
    return this != internal_default_instance() && inversionprocessresult_ != nullptr;
}
inline void ProjectInfo::clear_inversionprocessresult()
{
    if (GetArenaNoVirtual() == nullptr && inversionprocessresult_ != nullptr)
    {
        delete inversionprocessresult_;
    }
    inversionprocessresult_ = nullptr;
}
inline const ::pb::Data3d &ProjectInfo::inversionprocessresult() const
{
    const ::pb::Data3d *p = inversionprocessresult_;
    // @@protoc_insertion_point(field_get:pb.ProjectInfo.inversionProcessResult)
    return p != nullptr ? *p : *reinterpret_cast<const ::pb::Data3d *>(
                                   &::pb::_Data3d_default_instance_);
}
inline ::pb::Data3d *ProjectInfo::release_inversionprocessresult()
{
    // @@protoc_insertion_point(field_release:pb.ProjectInfo.inversionProcessResult)

    ::pb::Data3d *temp      = inversionprocessresult_;
    inversionprocessresult_ = nullptr;
    return temp;
}
inline ::pb::Data3d *ProjectInfo::mutable_inversionprocessresult()
{

    if (inversionprocessresult_ == nullptr)
    {
        auto *p                 = CreateMaybeMessage<::pb::Data3d>(GetArenaNoVirtual());
        inversionprocessresult_ = p;
    }
    // @@protoc_insertion_point(field_mutable:pb.ProjectInfo.inversionProcessResult)
    return inversionprocessresult_;
}
inline void ProjectInfo::set_allocated_inversionprocessresult(::pb::Data3d *inversionprocessresult)
{
    ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
    if (message_arena == nullptr)
    {
        delete inversionprocessresult_;
    }
    if (inversionprocessresult)
    {
        ::google::protobuf::Arena *submessage_arena = nullptr;
        if (message_arena != submessage_arena)
        {
            inversionprocessresult = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, inversionprocessresult, submessage_arena);
        }
    }
    else
    {
    }
    inversionprocessresult_ = inversionprocessresult;
    // @@protoc_insertion_point(field_set_allocated:pb.ProjectInfo.inversionProcessResult)
}

// repeated .pb.Vec2d halfLifeCurveDataList = 6;
inline int ProjectInfo::halflifecurvedatalist_size() const
{
    return halflifecurvedatalist_.size();
}
inline void ProjectInfo::clear_halflifecurvedatalist()
{
    halflifecurvedatalist_.Clear();
}
inline ::pb::Vec2d *ProjectInfo::mutable_halflifecurvedatalist(int index)
{
    // @@protoc_insertion_point(field_mutable:pb.ProjectInfo.halfLifeCurveDataList)
    return halflifecurvedatalist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::pb::Vec2d> *
ProjectInfo::mutable_halflifecurvedatalist()
{
    // @@protoc_insertion_point(field_mutable_list:pb.ProjectInfo.halfLifeCurveDataList)
    return &halflifecurvedatalist_;
}
inline const ::pb::Vec2d &ProjectInfo::halflifecurvedatalist(int index) const
{
    // @@protoc_insertion_point(field_get:pb.ProjectInfo.halfLifeCurveDataList)
    return halflifecurvedatalist_.Get(index);
}
inline ::pb::Vec2d *ProjectInfo::add_halflifecurvedatalist()
{
    // @@protoc_insertion_point(field_add:pb.ProjectInfo.halfLifeCurveDataList)
    return halflifecurvedatalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField<::pb::Vec2d> &
ProjectInfo::halflifecurvedatalist() const
{
    // @@protoc_insertion_point(field_list:pb.ProjectInfo.halfLifeCurveDataList)
    return halflifecurvedatalist_;
}

// .pb.ForwardModelingParaSetting simForwardParams = 7;
inline bool ProjectInfo::has_simforwardparams() const
{
    return this != internal_default_instance() && simforwardparams_ != nullptr;
}
inline void ProjectInfo::clear_simforwardparams()
{
    if (GetArenaNoVirtual() == nullptr && simforwardparams_ != nullptr)
    {
        delete simforwardparams_;
    }
    simforwardparams_ = nullptr;
}
inline const ::pb::ForwardModelingParaSetting &ProjectInfo::simforwardparams() const
{
    const ::pb::ForwardModelingParaSetting *p = simforwardparams_;
    // @@protoc_insertion_point(field_get:pb.ProjectInfo.simForwardParams)
    return p != nullptr ? *p : *reinterpret_cast<const ::pb::ForwardModelingParaSetting *>(
                                   &::pb::_ForwardModelingParaSetting_default_instance_);
}
inline ::pb::ForwardModelingParaSetting *ProjectInfo::release_simforwardparams()
{
    // @@protoc_insertion_point(field_release:pb.ProjectInfo.simForwardParams)

    ::pb::ForwardModelingParaSetting *temp = simforwardparams_;
    simforwardparams_                      = nullptr;
    return temp;
}
inline ::pb::ForwardModelingParaSetting *ProjectInfo::mutable_simforwardparams()
{

    if (simforwardparams_ == nullptr)
    {
        auto *p           = CreateMaybeMessage<::pb::ForwardModelingParaSetting>(GetArenaNoVirtual());
        simforwardparams_ = p;
    }
    // @@protoc_insertion_point(field_mutable:pb.ProjectInfo.simForwardParams)
    return simforwardparams_;
}
inline void ProjectInfo::set_allocated_simforwardparams(::pb::ForwardModelingParaSetting *simforwardparams)
{
    ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
    if (message_arena == nullptr)
    {
        delete simforwardparams_;
    }
    if (simforwardparams)
    {
        ::google::protobuf::Arena *submessage_arena = nullptr;
        if (message_arena != submessage_arena)
        {
            simforwardparams = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, simforwardparams, submessage_arena);
        }
    }
    else
    {
    }
    simforwardparams_ = simforwardparams;
    // @@protoc_insertion_point(field_set_allocated:pb.ProjectInfo.simForwardParams)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace pb

namespace google
{
namespace protobuf
{

template <>
struct is_proto_enum<::pb::DeviceType> : ::std::true_type
{
};
template <>
inline const EnumDescriptor *GetEnumDescriptor<::pb::DeviceType>()
{
    return ::pb::DeviceType_descriptor();
}
template <>
struct is_proto_enum<::pb::PotentialDeviceSelectionSwitch> : ::std::true_type
{
};
template <>
inline const EnumDescriptor *GetEnumDescriptor<::pb::PotentialDeviceSelectionSwitch>()
{
    return ::pb::PotentialDeviceSelectionSwitch_descriptor();
}
template <>
struct is_proto_enum<::pb::ExcavationDir> : ::std::true_type
{
};
template <>
inline const EnumDescriptor *GetEnumDescriptor<::pb::ExcavationDir>()
{
    return ::pb::ExcavationDir_descriptor();
}

} // namespace protobuf
} // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif // PROTOBUF_INCLUDED_Project_2epb
